function mergeOptions(e,r){var t=Object.assign({},e);return Object.keys(r).forEach(function(e){return t[e]=r[e]}),t}function Confit(e){this.options=e}function createInstance(e){return new Confit(e)}import axios from"axios";Confit.prototype.load=function(e){var r=mergeOptions(this.options,e||{}),t="/repo/"+r.repoId;r.alias?t+="/alias/"+r.alias:r.path&&(t+="/path/"+r.path);var n={method:"get",url:r.serverUrl+t,headers:r.repoSecret?{Authorization:"secret "+r.repoSecret}:void 0};return r.ref&&(n.params={ref:r.ref}),axios(n).then(function(e){return e.data}).catch(function(e){throw e.response?new Error("Confit call failed with status: "+e.response.status+"\nwhile sending request: "+JSON.stringify(n)+"\ndata: "+JSON.stringify(e.response.data)):e.request?new Error("No response from confit server"):new Error("Axios error: "+e.message+"\nwhile forming request: "+JSON.stringify(n))})};var nodeEnv="undefined"==typeof process?{}:process.env,defaults={serverUrl:nodeEnv.CONFIT_HOST||"https://confit.skillbill.net/api",repoSecret:nodeEnv.CONFIT_REPO_SECRET,repoId:nodeEnv.CONFIT_REPO_ID},confit=createInstance(defaults);confit.create=function(e){return new Confit(mergeOptions(defaults,e||{}))};export default confit;
