function mergeOptions(e,n){var r=Object.assign({},e);return Object.keys(n).forEach(function(e){return r[e]=n[e]}),r}function Confit(e){this.options=e}function createInstance(e){return new Confit(e)}import axios from"axios";Confit.prototype.load=function(e){var n=mergeOptions(this.options,e||{}),r="/repo/"+n.repoId;n.alias?r+="/alias/"+n.alias:n.path&&(r+="/path/"+n.path);var t={method:"get",url:n.serverUrl+r,headers:n.repoSecret?{Authorization:"token "+n.repoSecret}:void 0};return n.ref&&(t.params={ref:n.ref}),axios(t).then(function(e){return e.data}).catch(function(e){throw e.response?new Error("Confit call failed with status: "+e.response.status+"\nwhile sending request: "+JSON.stringify(t)+"\ndata: "+JSON.stringify(e.response.data)):e.request?new Error("No response from confit server"):new Error("Axios error: "+e.message+"\nwhile forming request: "+JSON.stringify(t))})};var nodeEnv="undefined"==typeof process?{}:process.env,defaults={serverUrl:nodeEnv.CONFIT_HOST||"https://confit.skillbill.net/api",repoSecret:nodeEnv.CONFIT_REPO_SECRET,repoId:nodeEnv.CONFIT_REPO_ID},confit=createInstance(defaults);confit.create=function(e){return new Confit(mergeOptions(defaults,e||{}))};export default confit;
